name: Daily Backtest MY Dataset

on:
  schedule:
    - cron: '30 23 * * *'
  workflow_dispatch:

jobs:
  run-backtest:
    runs-on: ubuntu-22.04

    steps:
    - name: 检出代码仓库
      uses: actions/checkout@v4

    - name: 设置 Python 环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: 安装编译依赖 (build-essential, wget)
      run: sudo apt-get update && sudo apt-get install -y build-essential wget

    - name: 下载、编译并安装 TA-Lib C 库 (v0.4.0)
      run: |
        echo "下载 TA-Lib C 库源码..."
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        echo "解压源码..."
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        echo "配置 TA-Lib C 库 (prefix=/usr)..."
        ./configure --prefix=/usr
        echo "编译 TA-Lib C 库..."
        make
        echo "安装 TA-Lib C 库..."
        sudo make install
        echo "更新动态链接器缓存..."
        sudo ldconfig
        cd ..
        echo "TA-Lib C 库安装完成."

    - name: 验证 TA-Lib C 库安装
      run: |
        echo "验证 /usr/lib 中的 TA-Lib 库文件..."
        ls -l /usr/lib/libta_lib* || (echo "库文件未在 /usr/lib 中找到!" && exit 1)
        echo "验证 /usr/include/ta-lib 中的 TA-Lib 头文件..."
        ls -l /usr/include/ta-lib/ta_libc.h || (echo "头文件未在 /usr/include/ta-lib 中找到!" && exit 1)

    - name: 首先安装 TA-Lib 的 Python 构建依赖
      run: |
        python -m pip install --upgrade pip
        # 在尝试安装 TA-Lib 之前，安装 Cython, NumPy<2, 以及 wheel 包
        # 这满足了 TA-Lib pyproject.toml 中的 [build-system] requirements
        # 并且确保了 bdist_wheel 命令可用
        echo "安装 Cython, NumPy<2, 和 wheel..."
        pip install "cython>=0.29.36" "numpy<2" "wheel" --verbose

    - name: 单独安装 TA-Lib Python 包装器
      run: |
        # 再次设置环境变量以防万一
        export TA_INCLUDE_PATH="/usr/include"
        export TA_LIBRARY_PATH="/usr/lib"
        export LD_LIBRARY_PATH=/usr/lib:$LD_LIBRARY_PATH
        echo "TA_INCLUDE_PATH=${TA_INCLUDE_PATH}"
        echo "TA_LIBRARY_PATH=${TA_LIBRARY_PATH}"
        echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"

        # 现在使用 --no-build-isolation 安装 TA-Lib
        # 因为构建依赖 (Cython, NumPy, wheel) 已经安装，这应该能工作
        echo "安装 TA-Lib==0.4.29 (或你选择的 0.4.x 版本)..."
        pip install --no-build-isolation TA-Lib==0.4.29 --verbose # 确保版本与 requirements.txt 一致

    - name: 安装剩余的 Python 依赖
      run: |
        echo "从 requirements.txt 安装剩余的依赖..."
        # Pip 会跳过已安装的 numpy 和 TA-Lib
        pip install -r requirements.txt --verbose

    - name: 运行回测脚本
      run: python Backtesting/main.py --dataset MY